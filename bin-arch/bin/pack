#!/usr/bin/env bash

set -e

readonly BIN=$(which pacaur 2>/dev/null || which pacman)
readonly SU_BIN=$(which pacaur 2>/dev/null || echo "sudo $(which pacman)")
readonly CMD=$1
shift

function usage {
	echo "Pacman helper tool ('$BIN', '$SU_BIN')"
	echo "Usage: $0 [sub-cmd] [options]"
	echo "  clean               : Clean the pacman cache, does not accept additional parameters"
	echo "  dependencies | deps : List dependency tree of a given package"
	echo "  diff                : Clean up pacnew files, does not accept addition parameters"
	echo "  download            : Download a remote package"
	echo "  install             : Install a remote package"
	echo "  install-local       : Install a local file"
	echo "  list-orphans        : List all installed orphan packages, does not accept additional parameters"
	echo "  provides            : Query which remote package provides a specified file"
	echo "  provides-local      : Query which local package provides a specified file"
	echo "  remove              : Uninstall a local package"
	echo "  search              : Search for the specified remote package or list all remote packages if none are specified"
	echo "  search-local        : Search for the specified local package or list all local packages if none are specified"
	echo "  sync                : Sync the package file database, does not accept additional parameters"
	echo "  upgrade             : Undate the specified packages or all packages if none are specified"
	echo "  verify              : Validate the specified packages or all packages if none are specified"
}

function usage_no_params {
	echo "Sub-command '$1' does not accept additional parameters."
}

if (( EUID == 0 )); then
	(>&2 echo "Script cannot be run as root")
	exit 1
fi

case $CMD in
	clean)
		if [ $# -ne 0 ]; then
			(>&2 usage_no_params $CMD)
			exit 1
		fi
		rm -rf ~/.cache/pacaur
		exec $(which paccache) -r
		;;
	dependencies|deps)
		exec $(which pactree) $*
		;;
	diff)
		if [ $# -ne 0 ]; then
			(>&2 usage_no_params $CMD)
			exit 1
		fi
		exec sudo $(which pacdiff)
		;;
	download)
		exec $SU_BIN -Sw $*
		;;
	install)
		exec $SU_BIN -S $*
		;;
	install-local)
		exec $SU_BIN -U $*
		;;
	list-orphans)
		if [ $# -ne 0 ]; then
			(>&2 usage_no_params $CMD)
			exit 1
		fi
		exec $BIN -Qdt
		;;
	provides)
		exec $BIN -Fo $*
		;;
	remove)
		exec $SU_BIN -Rns $*
		;;
	search)
		exec $BIN -Ss $*
		;;
	search-local)
		exec $BIN -Qs $*
		;;
	sync)
		if [ $# -ne 0 ]; then
			(>&2 usage_no_params $CMD)
			exit 1
		fi
		exec $SU_BIN -Fy
		;;
	upgrade)
		exec $SU_BIN -Syyu $*
		;;
	verify)
		exec $BIN -Qkk $*
		;;
	-h|--help)
		usage
		;;
	*)
		(>&2 echo "Unrecognized sub-command '$CMD'")
		(>&2 usage)
		exit 1
esac
